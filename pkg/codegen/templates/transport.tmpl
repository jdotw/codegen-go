{{$tag := .Tag}}

func AddHTTPRoutes(r *mux.Router, endpoints EndpointSet, logger log.Factory, tracer opentracing.Tracer) {
	options := []httptransport.ServerOption{
		httptransport.ServerErrorEncoder(transport.HTTPErrorEncoder),
    httptransport.ServerBefore(jwt.HTTPAuthorizationToContext()),
	}

{{range .Ops}}
{{$hasParams := .RequiresParamObject -}}
{{$pathParams := .PathParams -}}
{{$opid := .OperationId -}}
	{{lcFirst .OperationId}}Handler := httptransport.NewServer(
		endpoints.{{$opid}}Endpoint,
		decode{{$opid}}EndpointRequest,
		transport.HTTPEncodeResponse,
		options...,
	)
	r.Handle("{{.Path}}", {{lcFirst $opid}}Handler).Methods("{{.Method}}")
{{end}}
}

{{range .Ops}}
{{$pathParams := .PathParams -}}
{{$opid := .OperationId -}}

// {{$opid}}

func decode{{$opid}}EndpointRequest(_ context.Context, r *http.Request) (interface{}, error) {
  var endpointRequest {{$opid}}EndpointRequest
  {{range .Bodies}}
	if err := json.NewDecoder(r.Body).Decode(&endpointRequest.requestBody); err != nil {
		return nil, err
	}{{end}}

  {{if hasEndpointRequestVars $pathParams}}
	vars := mux.Vars(r)
  {{end}}

  {{genEndpointRequestVarSetters $pathParams}}

	return endpointRequest, nil
}
{{end}}

